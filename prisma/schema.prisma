// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator json {
  provider = "prisma-json-types-generator"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  USER
  EDITOR
  ADMIN
}

model User {
  id             String @id @default(uuid())
  externalUserId String @unique
  imageUrl       String @db.Text

  role UserRole @default(USER)

  posts Post[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id String @id @default(uuid())

  title    String  @unique
  slug     String  @unique
  imageCover Media? @relation(fields: [imageCoverId], references: [id])
  imageCoverId String? @unique

  /// [BodyData]
  bodyData Json @db.JsonB

  isPublished Boolean @default(false)

  versions PostVersion[]

  userId String
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PostVersion {
  id String @id @default(uuid())

  postId String
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)

  title   String
  bodyData Json @db.JsonB

  publishedAt DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([postId])
}

enum MediaType {
  AUDIO
  FILE
  IMAGE
  VIDEO
}

model Media {
  id String @id @default(uuid())

  name String
  url  String    @unique @db.Text
  size Int?
  type MediaType @default(FILE)
  altText String?

  post Post?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
